plugins {
    id("java")
    id 'org.jetbrains.kotlin.jvm' version '2.0.21'
}

version '1.0'

sourceCompatibility = JavaVersion.VERSION_16

sourceSets.main.java.srcDirs = ["src"]

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories{
    mavenCentral()
    maven{ url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
    maven{ url 'https://www.jitpack.io' }
}

ext{
    //the build number that this plugin is made for
    mindustryVersion = 'v146'
    jabelVersion = "93fde537c7"
}

//java 8 backwards compatibility flag
allprojects{
    tasks.withType(JavaCompile){
        options.compilerArgs.addAll(['--release', '8'])
    }
}

dependencies{
    //implementation(files("postgresql-42.7.5.jar"))
    implementation "com.github.Anuken.Arc:arc-core:$mindustryVersion"
    implementation "com.github.Anuken.Mindustry:core:$mindustryVersion"
    annotationProcessor "com.github.Anuken:jabel:$jabelVersion"
    implementation 'com.discord4j:discord4j-core:3.2.7'
    //implementation 'org.postgresql:postgresql:42.7.5'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

jar{
    archiveFileName = "${project.archivesBaseName}.jar"
    from{
        configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}
    }
    manifest {
        attributes(
                'Main-Class': 'example.Main'
        )
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compileClasspath
    destinationDir = file("$buildDir/javadoc")
}
compileKotlin {
}
